import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './PendingVerificationPage.css';

/**
 * PendingVerificationPage - Notification page for providers waiting for admin verification
 * Shown after provider completes registration but before admin approval
 */
const PendingVerificationPage = () => {
    const navigate = useNavigate();
    const [providerInfo, setProviderInfo] = useState(null);

    useEffect(() => {
        loadProviderInfo();
    }, []);

    const loadProviderInfo = () => {
        const providerStr = localStorage.getItem('provider');
        if (providerStr) {
            try {
                const provider = JSON.parse(providerStr);
                setProviderInfo(provider);
            } catch (error) {
                console.error('Error parsing provider:', error);
            }
        }
    };

    const handleBackToHome = () => {
        navigate('/');
    };

    const handleLogout = () => {
        localStorage.clear();
        navigate('/auth');
    };

    return (
        <div className="pending-verification-page">
            <div className="verification-card">
                <div className="verification-icon">
                    <div className="clock-animation">‚è≥</div>
                </div>

                <h1 className="verification-title">
                    ƒêang Ch·ªù X√°c Minh
                </h1>

                <div className="verification-content">
                    <p className="verification-message">
                        C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω l√†m <strong>Service Provider</strong> v·ªõi h·ªá th·ªëng Travel Booking!
                    </p>

                    {providerInfo && (
                        <div className="provider-info-box">
                            <h3>Th√¥ng tin ƒë√£ ƒëƒÉng k√Ω:</h3>
                            <div className="info-row">
                                <span className="info-label">C√¥ng ty:</span>
                                <span className="info-value">{providerInfo.company_name}</span>
                            </div>
                            <div className="info-row">
                                <span className="info-label">Email:</span>
                                <span className="info-value">{providerInfo.email}</span>
                            </div>
                            <div className="info-row">
                                <span className="info-label">Lo·∫°i d·ªãch v·ª•:</span>
                                <span className="info-value">
                                    {providerInfo.type?.map(t => {
                                        const icons = { hotel: 'üè®', tour: 'üó∫Ô∏è'};
                                        return (
                                            <span key={t} className="service-badge">
                                                {icons[t]} {t.charAt(0).toUpperCase() + t.slice(1)}
                                            </span>
                                        );
                                    })}
                                </span>
                            </div>
                            <div className="info-row">
                                <span className="info-label">S·ªë gi·∫•y ph√©p:</span>
                                <span className="info-value">{providerInfo.licenses?.length || 0}</span>
                            </div>
                        </div>
                    )}

                    <div className="status-box">
                        <div className="status-step">
                            <span className="step-icon completed">‚úì</span>
                            <span className="step-text">ƒêƒÉng k√Ω th√¥ng tin</span>
                        </div>
                        <div className="status-arrow">‚Üí</div>
                        <div className="status-step">
                            <span className="step-icon pending">‚è≥</span>
                            <span className="step-text">X√°c minh Admin</span>
                        </div>
                        <div className="status-arrow">‚Üí</div>
                        <div className="status-step">
                            <span className="step-icon waiting">‚óØ</span>
                            <span className="step-text">K√≠ch ho·∫°t t√†i kho·∫£n</span>
                        </div>
                    </div>

                    <div className="info-box">
                        <h3>üìã Quy tr√¨nh ti·∫øp theo:</h3>
                        <ol className="process-list">
                            <li>Admin s·∫Ω x√°c minh t·ª´ng gi·∫•y ph√©p kinh doanh c·ªßa b·∫°n</li>
                            <li>Sau khi t·∫•t c·∫£ gi·∫•y ph√©p ƒë∆∞·ª£c verify, admin s·∫Ω ph√™ duy·ªát t√†i kho·∫£n</li>
                            <li>B·∫°n s·∫Ω nh·∫≠n email th√¥ng b√°o khi t√†i kho·∫£n ƒë∆∞·ª£c k√≠ch ho·∫°t</li>
                            <li>ƒêƒÉng nh·∫≠p l·∫°i ƒë·ªÉ truy c·∫≠p giao di·ªán qu·∫£n l√Ω d·ªãch v·ª•</li>
                        </ol>
                    </div>

                    <div className="notice-box">
                        <span className="notice-icon">üí°</span>
                        <p className="notice-text">
                            <strong>L∆∞u √Ω:</strong> Th·ªùi gian x√°c minh th∆∞·ªùng m·∫•t 1-3 ng√†y l√†m vi·ªác.
                            N·∫øu c√≥ th·∫Øc m·∫Øc, vui l√≤ng li√™n h·ªá: <a href="mailto:support@travelbooking.com">support@travelbooking.com</a>
                        </p>
                    </div>
                </div>

                <div className="action-buttons">
                    <button
                        className="btn-home"
                        onClick={handleBackToHome}
                    >
                        ‚Üê V·ªÅ Trang Ch·ªß
                    </button>
                    <button
                        className="btn-logout"
                        onClick={handleLogout}
                    >
                        ƒêƒÉng Xu·∫•t
                    </button>
                </div>
            </div>
        </div>
    );
};

export default PendingVerificationPage;
